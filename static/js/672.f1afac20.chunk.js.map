{"version":3,"file":"static/js/672.f1afac20.chunk.js","mappings":"uLACA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,YAAc,6BAA6B,SAAW,2B,mBCa3K,EAVmB,SAACA,GAChB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAASC,UACrBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAKK,SAAEN,EAAMS,QAGtC,ECHA,EANgB,SAACT,GACb,OAAOG,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAJ,UACHH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAEN,EAAMW,WAE1C,E,uCCCMC,GAAcC,EAAAA,EAAAA,GAAiB,IAW/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EATL,SAACf,GACjB,OACIiB,EAAAA,EAAAA,MAAA,QAAMC,SAAUlB,EAAMmB,aAAab,SAAA,EAC/BH,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,IAAI,WAAWC,UAAWC,EAAAA,EAAad,KAAM,aAAce,SAAU,CAACC,EAAAA,EAAUb,MACvFT,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,UAGpB,IAsBA,EAlBgB,SAACN,GAKb,OACIiB,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAAA,QAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,YAAcC,SACzBN,EAAM0B,QAAQC,KAAI,SAAAC,GAAM,OAAIzB,EAAAA,EAAAA,KAAC0B,EAAU,CAAiBpB,KAAMmB,EAAOnB,KAAMP,GAAI0B,EAAO1B,IAAzC0B,EAAO1B,GAAuC,OAEhGe,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAAA,SAAWC,SAAA,CACtBN,EAAM8B,SAASH,KAAI,SAAAhB,GAAO,OAAIR,EAAAA,EAAAA,KAAC4B,EAAO,CAAkBpB,QAASA,EAAQA,SAA7BA,EAAQT,GAA+B,KACpFC,EAAAA,EAAAA,KAACW,EAAgB,CAACI,SAXT,SAACc,GAClBhC,EAAMiC,WAAWD,EAASE,WAC9B,SAaJ,E,mBCfA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACC,GACnB,MAAO,CACHX,QAASW,EAAMC,YAAYZ,QAC3BI,SAAUO,EAAMC,YAAYR,SAEpC,IAEyB,SAACS,GACtB,MAAO,CACHN,WAAY,SAACC,GACTK,GAASC,EAAAA,EAAAA,GAAwBN,GACrC,EAER,IAIIO,EAAAA,EAFJ,CAGEC,E,2ECrBEC,EAAkB,SAACN,GACnB,MAAO,CACHO,OAAQP,EAAMQ,KAAKD,OAE3B,EAWA,IATyB,SAACE,GAMtB,OAAOV,EAAAA,EAAAA,IAAQO,EAARP,EALmB,SAACpC,GACvB,OAAKA,EAAM4C,QACJzC,EAAAA,EAAAA,KAAC2C,GAASC,EAAAA,EAAAA,GAAA,GAAK/C,KADIG,EAAAA,EAAAA,KAAC6C,EAAAA,GAAQ,CAACxC,GAAI,UAE5C,GAGJ,C","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__1Qt1V\",\"dialog\":\"Dialogs_dialog__cmLIa\",\"active\":\"Dialogs_active__D3Xid\",\"dialogItems\":\"Dialogs_dialogItems__rVSeq\",\"messages\":\"Dialogs_messages__JGxhd\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    const path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <>\r\n        <div className={s.message}>{props.message}</div>\r\n    </>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../common/FormControls/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validate\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field tag=\"textarea\" component={FormControl} name={\"newMessage\"} validate={[required, maxLength50]}/>\r\n            <button>ADD</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'dialogs'})(DialogsForm)\r\n\r\nconst Dialogs = (props) => {\r\n    const onAddMessage = (formData) => {\r\n        props.addMessage(formData.newMessage);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {props.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {props.messages.map(message => <Message key={message.id} message={message.message}/>)}\r\n                <DialogsReduxForm onSubmit={onAddMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessage) => {\r\n            dispatch(addMessageActionCreator(newMessage));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;"],"names":["props","path","id","_jsx","className","s","children","NavLink","to","name","_Fragment","message","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","tag","component","FormControl","validate","required","dialogs","map","dialog","DialogItem","messages","Message","formData","addMessage","newMessage","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToProps","isAuth","auth","Component","_objectSpread","Navigate"],"sourceRoot":""}